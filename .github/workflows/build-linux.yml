name: Build (Linux)
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        echo "CONDA=$CONDA" >> $GITHUB_ENV

    - name: Cache conda dependencies
      uses: actions/cache@v2
      env:
        cache-name: conda-cache
      with:
        path: ${{ env.CONDA }}/pkgs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/environment.yml') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
    - name: Install dependencies using mamba
      run: |
        conda install mamba -n base -c conda-forge
        mamba env update --file environment.yml --name base

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Unit test with PyTest
      run: |
        pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=ghactionstest --cov-report=xml --cov-report=html

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pytest-results
        path: junit/test-results.xml

    - name: Upload Code Coverage Results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pytest-cov-results
        path: htmlcov/*

    - name: List files
      run: |
        tree .


  Publish:
    runs-on: ubuntu-latest
    needs: Test

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        echo "CONDA=$CONDA" >> $GITHUB_ENV

    - name: Cache conda dependencies
      uses: actions/cache@v2
      env:
        cache-name: conda-cache
      with:
        path: ${{ env.CONDA }}/pkgs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/environment.yml') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
    - name: Install dependencies using mamba
      run: |
        conda install mamba -n base -c conda-forge
        mamba env update --file environment.yml --name base

    - name: Update version number
      run: |
        cat ghactionstest/__version__.py
        sed -i "s/'$/.dev$GITHUB_RUN_NUMBER'/g" ghactionstest/__version__.py
        cat ghactionstest/__version__.py
      
    - name: Build the package
      run: |
        python setup.py sdist bdist_wheel      

    - name: Store build output as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-package
        path: dist/*

    - name: List files
      run: |
        tree .
